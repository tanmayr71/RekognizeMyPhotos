# This AWS SAM template has been generated from your function's 
# configuration. If your function has one or more triggers, note 
# that the AWS resources associated with these triggers aren't fully 
# specified in this template and include placeholder values.Open this template 
# in AWS Application Composer or your favorite IDE and modify 
# it to specify a serverless application with other AWS resources. 
AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: An AWS Serverless Specification template describing your function.
Resources:
  ASLF1:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Description: ''
      MemorySize: 128
      Timeout: 300
      Handler: lambda_function.lambda_handler
      Runtime: python3.11
      Architectures:
        - x86_64
      EventInvokeConfig:
        MaximumEventAgeInSeconds: 21600
        MaximumRetryAttempts: 2
      EphemeralStorage:
        Size: 512
      Events:
        BucketEvent1:
          Type: S3
          Properties:
            Bucket:
              Ref: Bucket1
            Events:
              - s3:ObjectCreated:*
      Layers:
        - arn:aws:lambda:us-east-1:579177839992:layer:myRequestsLayer:5
      RuntimeManagementConfig:
        UpdateRuntimeOn: Auto
      SnapStart:
        ApplyOn: None
      PackageType: Zip
      Policies:
        - Statement:
            - Effect: Allow
              Action:
                - logs:CreateLogGroup
              Resource: arn:aws:logs:us-east-1:579177839992:*
            - Effect: Allow
              Action:
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource:
                - >-
                  arn:aws:logs:us-east-1:579177839992:log-group:/aws/lambda/ASLF1:*
            - Sid: AmazonRekognitionReadOnlyAccess
              Effect: Allow
              Action:
                - rekognition:CompareFaces
                - rekognition:DetectFaces
                - rekognition:DetectLabels
                - rekognition:ListCollections
                - rekognition:ListFaces
                - rekognition:SearchFaces
                - rekognition:SearchFacesByImage
                - rekognition:DetectText
                - rekognition:GetCelebrityInfo
                - rekognition:RecognizeCelebrities
                - rekognition:DetectModerationLabels
                - rekognition:GetLabelDetection
                - rekognition:GetFaceDetection
                - rekognition:GetContentModeration
                - rekognition:GetPersonTracking
                - rekognition:GetCelebrityRecognition
                - rekognition:GetFaceSearch
                - rekognition:GetTextDetection
                - rekognition:GetSegmentDetection
                - rekognition:DescribeStreamProcessor
                - rekognition:ListStreamProcessors
                - rekognition:DescribeProjects
                - rekognition:DescribeProjectVersions
                - rekognition:DetectCustomLabels
                - rekognition:DetectProtectiveEquipment
                - rekognition:ListTagsForResource
                - rekognition:ListDatasetEntries
                - rekognition:ListDatasetLabels
                - rekognition:DescribeDataset
                - rekognition:ListProjectPolicies
                - rekognition:ListUsers
                - rekognition:SearchUsers
                - rekognition:SearchUsersByImage
                - rekognition:GetMediaAnalysisJob
                - rekognition:ListMediaAnalysisJobs
              Resource: '*'
            - Effect: Allow
              Action:
                - sns:Publish
              Resource: arn:aws:sns:*:*:AmazonRekognition*
            - Effect: Allow
              Action:
                - kinesis:PutRecord
                - kinesis:PutRecords
              Resource: arn:aws:kinesis:*:*:stream/AmazonRekognition*
            - Effect: Allow
              Action:
                - kinesisvideo:GetDataEndpoint
                - kinesisvideo:GetMedia
              Resource: '*'
            - Effect: Allow
              Action:
                - '*'
              Resource: '*'
            - Effect: Allow
              Action:
                - rekognition:*
              Resource: '*'
            - Effect: Allow
              Action:
                - cloudwatch:GetMetricStatistics
                - cloudwatch:DescribeAlarms
                - cloudwatch:DescribeAlarmsForMetric
                - kms:DescribeKey
                - kms:ListAliases
                - lambda:GetPolicy
                - lambda:ListFunctions
                - lex:*
                - polly:DescribeVoices
                - polly:SynthesizeSpeech
                - kendra:ListIndices
                - iam:ListRoles
                - s3:ListAllMyBuckets
                - logs:DescribeLogGroups
                - s3:GetBucketLocation
              Resource:
                - '*'
            - Effect: Allow
              Action:
                - lambda:AddPermission
                - lambda:RemovePermission
              Resource: arn:aws:lambda:*:*:function:AmazonLex*
              Condition:
                StringEquals:
                  lambda:Principal: lex.amazonaws.com
            - Effect: Allow
              Action:
                - iam:GetRole
              Resource:
                - >-
                  arn:aws:iam::*:role/aws-service-role/lex.amazonaws.com/AWSServiceRoleForLexBots
                - >-
                  arn:aws:iam::*:role/aws-service-role/channels.lex.amazonaws.com/AWSServiceRoleForLexChannels
                - >-
                  arn:aws:iam::*:role/aws-service-role/lexv2.amazonaws.com/AWSServiceRoleForLexV2Bots*
                - >-
                  arn:aws:iam::*:role/aws-service-role/channels.lexv2.amazonaws.com/AWSServiceRoleForLexV2Channels*
            - Effect: Allow
              Action:
                - iam:CreateServiceLinkedRole
              Resource:
                - >-
                  arn:aws:iam::*:role/aws-service-role/lex.amazonaws.com/AWSServiceRoleForLexBots
              Condition:
                StringEquals:
                  iam:AWSServiceName: lex.amazonaws.com
            - Effect: Allow
              Action:
                - iam:CreateServiceLinkedRole
              Resource:
                - >-
                  arn:aws:iam::*:role/aws-service-role/channels.lex.amazonaws.com/AWSServiceRoleForLexChannels
              Condition:
                StringEquals:
                  iam:AWSServiceName: channels.lex.amazonaws.com
            - Effect: Allow
              Action:
                - iam:CreateServiceLinkedRole
              Resource:
                - >-
                  arn:aws:iam::*:role/aws-service-role/lexv2.amazonaws.com/AWSServiceRoleForLexV2Bots*
              Condition:
                StringEquals:
                  iam:AWSServiceName: lexv2.amazonaws.com
            - Effect: Allow
              Action:
                - iam:CreateServiceLinkedRole
              Resource:
                - >-
                  arn:aws:iam::*:role/aws-service-role/channels.lexv2.amazonaws.com/AWSServiceRoleForLexV2Channels*
              Condition:
                StringEquals:
                  iam:AWSServiceName: channels.lexv2.amazonaws.com
            - Effect: Allow
              Action:
                - iam:DeleteServiceLinkedRole
                - iam:GetServiceLinkedRoleDeletionStatus
              Resource:
                - >-
                  arn:aws:iam::*:role/aws-service-role/lex.amazonaws.com/AWSServiceRoleForLexBots
                - >-
                  arn:aws:iam::*:role/aws-service-role/channels.lex.amazonaws.com/AWSServiceRoleForLexChannels
                - >-
                  arn:aws:iam::*:role/aws-service-role/lexv2.amazonaws.com/AWSServiceRoleForLexV2Bots*
                - >-
                  arn:aws:iam::*:role/aws-service-role/channels.lexv2.amazonaws.com/AWSServiceRoleForLexV2Channels*
            - Effect: Allow
              Action:
                - iam:PassRole
              Resource:
                - >-
                  arn:aws:iam::*:role/aws-service-role/lex.amazonaws.com/AWSServiceRoleForLexBots
              Condition:
                StringEquals:
                  iam:PassedToService:
                    - lex.amazonaws.com
            - Effect: Allow
              Action:
                - iam:PassRole
              Resource:
                - >-
                  arn:aws:iam::*:role/aws-service-role/lexv2.amazonaws.com/AWSServiceRoleForLexV2Bots*
              Condition:
                StringEquals:
                  iam:PassedToService:
                    - lexv2.amazonaws.com
            - Effect: Allow
              Action:
                - iam:PassRole
              Resource:
                - >-
                  arn:aws:iam::*:role/aws-service-role/channels.lexv2.amazonaws.com/AWSServiceRoleForLexV2Channels*
              Condition:
                StringEquals:
                  iam:PassedToService:
                    - channels.lexv2.amazonaws.com
            - Effect: Allow
              Action:
                - s3:*
                - s3-object-lambda:*
              Resource: '*'
            - Effect: Allow
              Action:
                - s3:ListBucket
                - s3:ListAllMyBuckets
                - s3:GetBucketAcl
                - s3:GetBucketLocation
                - s3:GetObject
                - s3:GetObjectAcl
                - s3:GetObjectTagging
                - s3:GetObjectVersion
                - s3:PutObject
              Resource: arn:aws:s3:::*custom-labels*
            - Effect: Allow
              Action:
                - rekognition:CreateProject
                - rekognition:CreateProjectVersion
                - rekognition:StartProjectVersion
                - rekognition:StopProjectVersion
                - rekognition:DescribeProjects
                - rekognition:DescribeProjectVersions
                - rekognition:DetectCustomLabels
                - rekognition:DeleteProject
                - rekognition:DeleteProjectVersion
                - rekognition:TagResource
                - rekognition:UntagResource
                - rekognition:ListTagsForResource
                - rekognition:CreateDataset
                - rekognition:ListDatasetEntries
                - rekognition:ListDatasetLabels
                - rekognition:DescribeDataset
                - rekognition:UpdateDatasetEntries
                - rekognition:DistributeDatasetEntries
                - rekognition:DeleteDataset
                - rekognition:CopyProjectVersion
                - rekognition:PutProjectPolicy
                - rekognition:ListProjectPolicies
                - rekognition:DeleteProjectPolicy
              Resource: '*'
            - Effect: Allow
              Action:
                - logs:CreateLogGroup
                - logs:CreateLogStream
                - logs:PutLogEvents
                - s3-object-lambda:WriteGetObjectResponse
              Resource: '*'
            - Effect: Allow
              Action:
                - es:*
              Resource: '*'
  Bucket1:
    Type: AWS::S3::Bucket
    Properties:
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
  BucketPolicy1:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: Bucket1
      PolicyDocument:
        Statement:
          - Action: s3:*
            Effect: Deny
            Principal: '*'
            Resource:
              - arn:aws:s3:::Bucket1/*
              - arn:aws:s3:::Bucket1
            Condition:
              Bool:
                aws:SecureTransport: false

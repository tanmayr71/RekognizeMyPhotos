# This AWS SAM template has been generated from your function's 
# configuration. If your function has one or more triggers, note 
# that the AWS resources associated with these triggers aren't fully 
# specified in this template and include placeholder values.Open this template 
# in AWS Application Composer or your favorite IDE and modify 
# it to specify a serverless application with other AWS resources. 
AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: An AWS Serverless Specification template describing your function.
Resources:
  ASLF2:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Description: ''
      MemorySize: 128
      Timeout: 303
      Handler: lambda_function.lambda_handler
      Runtime: python3.11
      Architectures:
        - x86_64
      EventInvokeConfig:
        MaximumEventAgeInSeconds: 21600
        MaximumRetryAttempts: 2
      EphemeralStorage:
        Size: 512
      Events:
        Api1:
          Type: Api
          Properties:
            Path: /search
            Method: GET
        Api2:
          Type: Api
          Properties:
            Path: /search
            Method: GET
        Api3:
          Type: Api
          Properties:
            Path: /search
            Method: OPTIONS
      Layers:
        - arn:aws:lambda:us-east-1:579177839992:layer:myRequestsLayer:5
      RuntimeManagementConfig:
        UpdateRuntimeOn: Auto
      SnapStart:
        ApplyOn: None
      PackageType: Zip
      Policies:
        - Statement:
            - Effect: Allow
              Action:
                - logs:CreateLogGroup
              Resource: arn:aws:logs:us-east-1:579177839992:*
            - Effect: Allow
              Action:
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource:
                - >-
                  arn:aws:logs:us-east-1:579177839992:log-group:/aws/lambda/ASLF2:*
            - Effect: Allow
              Action:
                - lex:PostContent
                - lex:PostText
                - lex:PutSession
                - lex:GetSession
                - lex:DeleteSession
                - lex:RecognizeText
                - lex:RecognizeUtterance
                - lex:StartConversation
              Resource: '*'
            - Effect: Allow
              Action:
                - cloudwatch:GetMetricStatistics
                - cloudwatch:DescribeAlarms
                - cloudwatch:DescribeAlarmsForMetric
                - kms:DescribeKey
                - kms:ListAliases
                - lambda:GetPolicy
                - lambda:ListFunctions
                - lex:*
                - polly:DescribeVoices
                - polly:SynthesizeSpeech
                - kendra:ListIndices
                - iam:ListRoles
                - s3:ListAllMyBuckets
                - logs:DescribeLogGroups
                - s3:GetBucketLocation
              Resource:
                - '*'
            - Effect: Allow
              Action:
                - lambda:AddPermission
                - lambda:RemovePermission
              Resource: arn:aws:lambda:*:*:function:AmazonLex*
              Condition:
                StringEquals:
                  lambda:Principal: lex.amazonaws.com
            - Effect: Allow
              Action:
                - iam:GetRole
              Resource:
                - >-
                  arn:aws:iam::*:role/aws-service-role/lex.amazonaws.com/AWSServiceRoleForLexBots
                - >-
                  arn:aws:iam::*:role/aws-service-role/channels.lex.amazonaws.com/AWSServiceRoleForLexChannels
                - >-
                  arn:aws:iam::*:role/aws-service-role/lexv2.amazonaws.com/AWSServiceRoleForLexV2Bots*
                - >-
                  arn:aws:iam::*:role/aws-service-role/channels.lexv2.amazonaws.com/AWSServiceRoleForLexV2Channels*
            - Effect: Allow
              Action:
                - iam:CreateServiceLinkedRole
              Resource:
                - >-
                  arn:aws:iam::*:role/aws-service-role/lex.amazonaws.com/AWSServiceRoleForLexBots
              Condition:
                StringEquals:
                  iam:AWSServiceName: lex.amazonaws.com
            - Effect: Allow
              Action:
                - iam:CreateServiceLinkedRole
              Resource:
                - >-
                  arn:aws:iam::*:role/aws-service-role/channels.lex.amazonaws.com/AWSServiceRoleForLexChannels
              Condition:
                StringEquals:
                  iam:AWSServiceName: channels.lex.amazonaws.com
            - Effect: Allow
              Action:
                - iam:CreateServiceLinkedRole
              Resource:
                - >-
                  arn:aws:iam::*:role/aws-service-role/lexv2.amazonaws.com/AWSServiceRoleForLexV2Bots*
              Condition:
                StringEquals:
                  iam:AWSServiceName: lexv2.amazonaws.com
            - Effect: Allow
              Action:
                - iam:CreateServiceLinkedRole
              Resource:
                - >-
                  arn:aws:iam::*:role/aws-service-role/channels.lexv2.amazonaws.com/AWSServiceRoleForLexV2Channels*
              Condition:
                StringEquals:
                  iam:AWSServiceName: channels.lexv2.amazonaws.com
            - Effect: Allow
              Action:
                - iam:DeleteServiceLinkedRole
                - iam:GetServiceLinkedRoleDeletionStatus
              Resource:
                - >-
                  arn:aws:iam::*:role/aws-service-role/lex.amazonaws.com/AWSServiceRoleForLexBots
                - >-
                  arn:aws:iam::*:role/aws-service-role/channels.lex.amazonaws.com/AWSServiceRoleForLexChannels
                - >-
                  arn:aws:iam::*:role/aws-service-role/lexv2.amazonaws.com/AWSServiceRoleForLexV2Bots*
                - >-
                  arn:aws:iam::*:role/aws-service-role/channels.lexv2.amazonaws.com/AWSServiceRoleForLexV2Channels*
            - Effect: Allow
              Action:
                - iam:PassRole
              Resource:
                - >-
                  arn:aws:iam::*:role/aws-service-role/lex.amazonaws.com/AWSServiceRoleForLexBots
              Condition:
                StringEquals:
                  iam:PassedToService:
                    - lex.amazonaws.com
            - Effect: Allow
              Action:
                - iam:PassRole
              Resource:
                - >-
                  arn:aws:iam::*:role/aws-service-role/lexv2.amazonaws.com/AWSServiceRoleForLexV2Bots*
              Condition:
                StringEquals:
                  iam:PassedToService:
                    - lexv2.amazonaws.com
            - Effect: Allow
              Action:
                - iam:PassRole
              Resource:
                - >-
                  arn:aws:iam::*:role/aws-service-role/channels.lexv2.amazonaws.com/AWSServiceRoleForLexV2Channels*
              Condition:
                StringEquals:
                  iam:PassedToService:
                    - channels.lexv2.amazonaws.com
            - Effect: Allow
              Action:
                - execute-api:Invoke
                - execute-api:ManageConnections
              Resource: arn:aws:execute-api:*:*:*
            - Effect: Allow
              Action:
                - s3:*
                - s3-object-lambda:*
              Resource: '*'
            - Effect: Allow
              Action:
                - es:*
              Resource: '*'
